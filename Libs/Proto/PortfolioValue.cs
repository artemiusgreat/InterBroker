// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PortfolioValue.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from PortfolioValue.proto</summary>
  public static partial class PortfolioValueReflection {

    #region Descriptor
    /// <summary>File descriptor for PortfolioValue.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PortfolioValueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQb3J0Zm9saW9WYWx1ZS5wcm90bxIIcHJvdG9idWYaDkNvbnRyYWN0LnBy",
            "b3RvIuwCCg5Qb3J0Zm9saW9WYWx1ZRIpCghjb250cmFjdBgBIAEoCzISLnBy",
            "b3RvYnVmLkNvbnRyYWN0SACIAQESFQoIcG9zaXRpb24YAiABKAlIAYgBARIY",
            "CgttYXJrZXRQcmljZRgDIAEoAUgCiAEBEhgKC21hcmtldFZhbHVlGAQgASgB",
            "SAOIAQESGAoLYXZlcmFnZUNvc3QYBSABKAFIBIgBARIaCg11bnJlYWxpemVk",
            "UE5MGAYgASgBSAWIAQESGAoLcmVhbGl6ZWRQTkwYByABKAFIBogBARIYCgth",
            "Y2NvdW50TmFtZRgIIAEoCUgHiAEBQgsKCV9jb250cmFjdEILCglfcG9zaXRp",
            "b25CDgoMX21hcmtldFByaWNlQg4KDF9tYXJrZXRWYWx1ZUIOCgxfYXZlcmFn",
            "ZUNvc3RCEAoOX3VucmVhbGl6ZWRQTkxCDgoMX3JlYWxpemVkUE5MQg4KDF9h",
            "Y2NvdW50TmFtZUI+ChZjb20uaWIuY2xpZW50LnByb3RvYnVmQhNQb3J0Zm9s",
            "aW9WYWx1ZVByb3RvqgIOSUJBcGkucHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.ContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.PortfolioValue), global::IBApi.protobuf.PortfolioValue.Parser, new[]{ "Contract", "Position", "MarketPrice", "MarketValue", "AverageCost", "UnrealizedPNL", "RealizedPNL", "AccountName" }, new[]{ "Contract", "Position", "MarketPrice", "MarketValue", "AverageCost", "UnrealizedPNL", "RealizedPNL", "AccountName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PortfolioValue : pb::IMessage<PortfolioValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PortfolioValue> _parser = new pb::MessageParser<PortfolioValue>(() => new PortfolioValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PortfolioValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.PortfolioValueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioValue(PortfolioValue other) : this() {
      _hasBits0 = other._hasBits0;
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      position_ = other.position_;
      marketPrice_ = other.marketPrice_;
      marketValue_ = other.marketValue_;
      averageCost_ = other.averageCost_;
      unrealizedPNL_ = other.unrealizedPNL_;
      realizedPNL_ = other.realizedPNL_;
      accountName_ = other.accountName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortfolioValue Clone() {
      return new PortfolioValue(this);
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 1;
    private global::IBApi.protobuf.ProtoContract contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IBApi.protobuf.ProtoContract Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private readonly static string PositionDefaultValue = "";

    private string position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Position {
      get { return position_ ?? PositionDefaultValue; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return position_ != null; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      position_ = null;
    }

    /// <summary>Field number for the "marketPrice" field.</summary>
    public const int MarketPriceFieldNumber = 3;
    private readonly static double MarketPriceDefaultValue = 0D;

    private double marketPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MarketPrice {
      get { if ((_hasBits0 & 1) != 0) { return marketPrice_; } else { return MarketPriceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        marketPrice_ = value;
      }
    }
    /// <summary>Gets whether the "marketPrice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketPrice {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "marketPrice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketPrice() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "marketValue" field.</summary>
    public const int MarketValueFieldNumber = 4;
    private readonly static double MarketValueDefaultValue = 0D;

    private double marketValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MarketValue {
      get { if ((_hasBits0 & 2) != 0) { return marketValue_; } else { return MarketValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        marketValue_ = value;
      }
    }
    /// <summary>Gets whether the "marketValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "marketValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketValue() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "averageCost" field.</summary>
    public const int AverageCostFieldNumber = 5;
    private readonly static double AverageCostDefaultValue = 0D;

    private double averageCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AverageCost {
      get { if ((_hasBits0 & 4) != 0) { return averageCost_; } else { return AverageCostDefaultValue; } }
      set {
        _hasBits0 |= 4;
        averageCost_ = value;
      }
    }
    /// <summary>Gets whether the "averageCost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAverageCost {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "averageCost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAverageCost() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "unrealizedPNL" field.</summary>
    public const int UnrealizedPNLFieldNumber = 6;
    private readonly static double UnrealizedPNLDefaultValue = 0D;

    private double unrealizedPNL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double UnrealizedPNL {
      get { if ((_hasBits0 & 8) != 0) { return unrealizedPNL_; } else { return UnrealizedPNLDefaultValue; } }
      set {
        _hasBits0 |= 8;
        unrealizedPNL_ = value;
      }
    }
    /// <summary>Gets whether the "unrealizedPNL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnrealizedPNL {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "unrealizedPNL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnrealizedPNL() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "realizedPNL" field.</summary>
    public const int RealizedPNLFieldNumber = 7;
    private readonly static double RealizedPNLDefaultValue = 0D;

    private double realizedPNL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RealizedPNL {
      get { if ((_hasBits0 & 16) != 0) { return realizedPNL_; } else { return RealizedPNLDefaultValue; } }
      set {
        _hasBits0 |= 16;
        realizedPNL_ = value;
      }
    }
    /// <summary>Gets whether the "realizedPNL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealizedPNL {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "realizedPNL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealizedPNL() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "accountName" field.</summary>
    public const int AccountNameFieldNumber = 8;
    private readonly static string AccountNameDefaultValue = "";

    private string accountName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountName {
      get { return accountName_ ?? AccountNameDefaultValue; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accountName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountName {
      get { return accountName_ != null; }
    }
    /// <summary>Clears the value of the "accountName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountName() {
      accountName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PortfolioValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PortfolioValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contract, other.Contract)) return false;
      if (Position != other.Position) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MarketPrice, other.MarketPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MarketValue, other.MarketValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AverageCost, other.AverageCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnrealizedPNL, other.UnrealizedPNL)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RealizedPNL, other.RealizedPNL)) return false;
      if (AccountName != other.AccountName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (HasPosition) hash ^= Position.GetHashCode();
      if (HasMarketPrice) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MarketPrice);
      if (HasMarketValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MarketValue);
      if (HasAverageCost) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AverageCost);
      if (HasUnrealizedPNL) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnrealizedPNL);
      if (HasRealizedPNL) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RealizedPNL);
      if (HasAccountName) hash ^= AccountName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contract);
      }
      if (HasPosition) {
        output.WriteRawTag(18);
        output.WriteString(Position);
      }
      if (HasMarketPrice) {
        output.WriteRawTag(25);
        output.WriteDouble(MarketPrice);
      }
      if (HasMarketValue) {
        output.WriteRawTag(33);
        output.WriteDouble(MarketValue);
      }
      if (HasAverageCost) {
        output.WriteRawTag(41);
        output.WriteDouble(AverageCost);
      }
      if (HasUnrealizedPNL) {
        output.WriteRawTag(49);
        output.WriteDouble(UnrealizedPNL);
      }
      if (HasRealizedPNL) {
        output.WriteRawTag(57);
        output.WriteDouble(RealizedPNL);
      }
      if (HasAccountName) {
        output.WriteRawTag(66);
        output.WriteString(AccountName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contract);
      }
      if (HasPosition) {
        output.WriteRawTag(18);
        output.WriteString(Position);
      }
      if (HasMarketPrice) {
        output.WriteRawTag(25);
        output.WriteDouble(MarketPrice);
      }
      if (HasMarketValue) {
        output.WriteRawTag(33);
        output.WriteDouble(MarketValue);
      }
      if (HasAverageCost) {
        output.WriteRawTag(41);
        output.WriteDouble(AverageCost);
      }
      if (HasUnrealizedPNL) {
        output.WriteRawTag(49);
        output.WriteDouble(UnrealizedPNL);
      }
      if (HasRealizedPNL) {
        output.WriteRawTag(57);
        output.WriteDouble(RealizedPNL);
      }
      if (HasAccountName) {
        output.WriteRawTag(66);
        output.WriteString(AccountName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (HasPosition) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (HasMarketPrice) {
        size += 1 + 8;
      }
      if (HasMarketValue) {
        size += 1 + 8;
      }
      if (HasAverageCost) {
        size += 1 + 8;
      }
      if (HasUnrealizedPNL) {
        size += 1 + 8;
      }
      if (HasRealizedPNL) {
        size += 1 + 8;
      }
      if (HasAccountName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PortfolioValue other) {
      if (other == null) {
        return;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          Contract = new global::IBApi.protobuf.ProtoContract();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasMarketPrice) {
        MarketPrice = other.MarketPrice;
      }
      if (other.HasMarketValue) {
        MarketValue = other.MarketValue;
      }
      if (other.HasAverageCost) {
        AverageCost = other.AverageCost;
      }
      if (other.HasUnrealizedPNL) {
        UnrealizedPNL = other.UnrealizedPNL;
      }
      if (other.HasRealizedPNL) {
        RealizedPNL = other.RealizedPNL;
      }
      if (other.HasAccountName) {
        AccountName = other.AccountName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.Contract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 18: {
            Position = input.ReadString();
            break;
          }
          case 25: {
            MarketPrice = input.ReadDouble();
            break;
          }
          case 33: {
            MarketValue = input.ReadDouble();
            break;
          }
          case 41: {
            AverageCost = input.ReadDouble();
            break;
          }
          case 49: {
            UnrealizedPNL = input.ReadDouble();
            break;
          }
          case 57: {
            RealizedPNL = input.ReadDouble();
            break;
          }
          case 66: {
            AccountName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.ProtoContract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 18: {
            Position = input.ReadString();
            break;
          }
          case 25: {
            MarketPrice = input.ReadDouble();
            break;
          }
          case 33: {
            MarketValue = input.ReadDouble();
            break;
          }
          case 41: {
            AverageCost = input.ReadDouble();
            break;
          }
          case 49: {
            UnrealizedPNL = input.ReadDouble();
            break;
          }
          case 57: {
            RealizedPNL = input.ReadDouble();
            break;
          }
          case 66: {
            AccountName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
