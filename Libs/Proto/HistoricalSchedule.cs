// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HistoricalSchedule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from HistoricalSchedule.proto</summary>
  public static partial class HistoricalScheduleReflection {

    #region Descriptor
    /// <summary>File descriptor for HistoricalSchedule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HistoricalScheduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhIaXN0b3JpY2FsU2NoZWR1bGUucHJvdG8SCHByb3RvYnVmGhdIaXN0b3Jp",
            "Y2FsU2Vzc2lvbi5wcm90byLnAQoSSGlzdG9yaWNhbFNjaGVkdWxlEhIKBXJl",
            "cUlkGAEgASgFSACIAQESGgoNc3RhcnREYXRlVGltZRgCIAEoCUgBiAEBEhgK",
            "C2VuZERhdGVUaW1lGAMgASgJSAKIAQESFQoIdGltZVpvbmUYBCABKAlIA4gB",
            "ARI3ChJoaXN0b3JpY2FsU2Vzc2lvbnMYBSADKAsyGy5wcm90b2J1Zi5IaXN0",
            "b3JpY2FsU2Vzc2lvbkIICgZfcmVxSWRCEAoOX3N0YXJ0RGF0ZVRpbWVCDgoM",
            "X2VuZERhdGVUaW1lQgsKCV90aW1lWm9uZUJCChZjb20uaWIuY2xpZW50LnBy",
            "b3RvYnVmQhdIaXN0b3JpY2FsU2NoZWR1bGVQcm90b6oCDklCQXBpLnByb3Rv",
            "YnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.HistoricalSessionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.HistoricalSchedule), global::IBApi.protobuf.HistoricalSchedule.Parser, new[]{ "ReqId", "StartDateTime", "EndDateTime", "TimeZone", "HistoricalSessions" }, new[]{ "ReqId", "StartDateTime", "EndDateTime", "TimeZone" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HistoricalSchedule : pb::IMessage<HistoricalSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoricalSchedule> _parser = new pb::MessageParser<HistoricalSchedule>(() => new HistoricalSchedule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HistoricalSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.HistoricalScheduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalSchedule(HistoricalSchedule other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      startDateTime_ = other.startDateTime_;
      endDateTime_ = other.endDateTime_;
      timeZone_ = other.timeZone_;
      historicalSessions_ = other.historicalSessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalSchedule Clone() {
      return new HistoricalSchedule(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "startDateTime" field.</summary>
    public const int StartDateTimeFieldNumber = 2;
    private readonly static string StartDateTimeDefaultValue = "";

    private string startDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartDateTime {
      get { return startDateTime_ ?? StartDateTimeDefaultValue; }
      set {
        startDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "startDateTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartDateTime {
      get { return startDateTime_ != null; }
    }
    /// <summary>Clears the value of the "startDateTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartDateTime() {
      startDateTime_ = null;
    }

    /// <summary>Field number for the "endDateTime" field.</summary>
    public const int EndDateTimeFieldNumber = 3;
    private readonly static string EndDateTimeDefaultValue = "";

    private string endDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndDateTime {
      get { return endDateTime_ ?? EndDateTimeDefaultValue; }
      set {
        endDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "endDateTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndDateTime {
      get { return endDateTime_ != null; }
    }
    /// <summary>Clears the value of the "endDateTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndDateTime() {
      endDateTime_ = null;
    }

    /// <summary>Field number for the "timeZone" field.</summary>
    public const int TimeZoneFieldNumber = 4;
    private readonly static string TimeZoneDefaultValue = "";

    private string timeZone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeZone {
      get { return timeZone_ ?? TimeZoneDefaultValue; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timeZone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeZone {
      get { return timeZone_ != null; }
    }
    /// <summary>Clears the value of the "timeZone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeZone() {
      timeZone_ = null;
    }

    /// <summary>Field number for the "historicalSessions" field.</summary>
    public const int HistoricalSessionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::IBApi.protobuf.HistoricalSession> _repeated_historicalSessions_codec
        = pb::FieldCodec.ForMessage(42, global::IBApi.protobuf.HistoricalSession.Parser);
    private readonly pbc::RepeatedField<global::IBApi.protobuf.HistoricalSession> historicalSessions_ = new pbc::RepeatedField<global::IBApi.protobuf.HistoricalSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::IBApi.protobuf.HistoricalSession> HistoricalSessions {
      get { return historicalSessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HistoricalSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HistoricalSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (StartDateTime != other.StartDateTime) return false;
      if (EndDateTime != other.EndDateTime) return false;
      if (TimeZone != other.TimeZone) return false;
      if(!historicalSessions_.Equals(other.historicalSessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (HasStartDateTime) hash ^= StartDateTime.GetHashCode();
      if (HasEndDateTime) hash ^= EndDateTime.GetHashCode();
      if (HasTimeZone) hash ^= TimeZone.GetHashCode();
      hash ^= historicalSessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasStartDateTime) {
        output.WriteRawTag(18);
        output.WriteString(StartDateTime);
      }
      if (HasEndDateTime) {
        output.WriteRawTag(26);
        output.WriteString(EndDateTime);
      }
      if (HasTimeZone) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      historicalSessions_.WriteTo(output, _repeated_historicalSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasStartDateTime) {
        output.WriteRawTag(18);
        output.WriteString(StartDateTime);
      }
      if (HasEndDateTime) {
        output.WriteRawTag(26);
        output.WriteString(EndDateTime);
      }
      if (HasTimeZone) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      historicalSessions_.WriteTo(ref output, _repeated_historicalSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (HasStartDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDateTime);
      }
      if (HasEndDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDateTime);
      }
      if (HasTimeZone) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      size += historicalSessions_.CalculateSize(_repeated_historicalSessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HistoricalSchedule other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.HasStartDateTime) {
        StartDateTime = other.StartDateTime;
      }
      if (other.HasEndDateTime) {
        EndDateTime = other.EndDateTime;
      }
      if (other.HasTimeZone) {
        TimeZone = other.TimeZone;
      }
      historicalSessions_.Add(other.historicalSessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            StartDateTime = input.ReadString();
            break;
          }
          case 26: {
            EndDateTime = input.ReadString();
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            historicalSessions_.AddEntriesFrom(input, _repeated_historicalSessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            StartDateTime = input.ReadString();
            break;
          }
          case 26: {
            EndDateTime = input.ReadString();
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            historicalSessions_.AddEntriesFrom(ref input, _repeated_historicalSessions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
