// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DepthMarketDataDescription.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from DepthMarketDataDescription.proto</summary>
  public static partial class DepthMarketDataDescriptionReflection {

    #region Descriptor
    /// <summary>File descriptor for DepthMarketDataDescription.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DepthMarketDataDescriptionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBEZXB0aE1hcmtldERhdGFEZXNjcmlwdGlvbi5wcm90bxIIcHJvdG9idWYi",
            "4gEKGkRlcHRoTWFya2V0RGF0YURlc2NyaXB0aW9uEhUKCGV4Y2hhbmdlGAEg",
            "ASgJSACIAQESFAoHc2VjVHlwZRgCIAEoCUgBiAEBEhgKC2xpc3RpbmdFeGNo",
            "GAMgASgJSAKIAQESHAoPc2VydmljZURhdGFUeXBlGAQgASgJSAOIAQESFQoI",
            "YWdnR3JvdXAYBSABKAVIBIgBAUILCglfZXhjaGFuZ2VCCgoIX3NlY1R5cGVC",
            "DgoMX2xpc3RpbmdFeGNoQhIKEF9zZXJ2aWNlRGF0YVR5cGVCCwoJX2FnZ0dy",
            "b3VwQkoKFmNvbS5pYi5jbGllbnQucHJvdG9idWZCH0RlcHRoTWFya2V0RGF0",
            "YURlc2NyaXB0aW9uUHJvdG+qAg5JQkFwaS5wcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.DepthMarketDataDescription), global::IBApi.protobuf.DepthMarketDataDescription.Parser, new[]{ "Exchange", "SecType", "ListingExch", "ServiceDataType", "AggGroup" }, new[]{ "Exchange", "SecType", "ListingExch", "ServiceDataType", "AggGroup" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DepthMarketDataDescription : pb::IMessage<DepthMarketDataDescription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DepthMarketDataDescription> _parser = new pb::MessageParser<DepthMarketDataDescription>(() => new DepthMarketDataDescription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DepthMarketDataDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.DepthMarketDataDescriptionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthMarketDataDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthMarketDataDescription(DepthMarketDataDescription other) : this() {
      _hasBits0 = other._hasBits0;
      exchange_ = other.exchange_;
      secType_ = other.secType_;
      listingExch_ = other.listingExch_;
      serviceDataType_ = other.serviceDataType_;
      aggGroup_ = other.aggGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DepthMarketDataDescription Clone() {
      return new DepthMarketDataDescription(this);
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 1;
    private readonly static string ExchangeDefaultValue = "";

    private string exchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_ ?? ExchangeDefaultValue; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return exchange_ != null; }
    }
    /// <summary>Clears the value of the "exchange" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      exchange_ = null;
    }

    /// <summary>Field number for the "secType" field.</summary>
    public const int SecTypeFieldNumber = 2;
    private readonly static string SecTypeDefaultValue = "";

    private string secType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecType {
      get { return secType_ ?? SecTypeDefaultValue; }
      set {
        secType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "secType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecType {
      get { return secType_ != null; }
    }
    /// <summary>Clears the value of the "secType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecType() {
      secType_ = null;
    }

    /// <summary>Field number for the "listingExch" field.</summary>
    public const int ListingExchFieldNumber = 3;
    private readonly static string ListingExchDefaultValue = "";

    private string listingExch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ListingExch {
      get { return listingExch_ ?? ListingExchDefaultValue; }
      set {
        listingExch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "listingExch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasListingExch {
      get { return listingExch_ != null; }
    }
    /// <summary>Clears the value of the "listingExch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearListingExch() {
      listingExch_ = null;
    }

    /// <summary>Field number for the "serviceDataType" field.</summary>
    public const int ServiceDataTypeFieldNumber = 4;
    private readonly static string ServiceDataTypeDefaultValue = "";

    private string serviceDataType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceDataType {
      get { return serviceDataType_ ?? ServiceDataTypeDefaultValue; }
      set {
        serviceDataType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serviceDataType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServiceDataType {
      get { return serviceDataType_ != null; }
    }
    /// <summary>Clears the value of the "serviceDataType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServiceDataType() {
      serviceDataType_ = null;
    }

    /// <summary>Field number for the "aggGroup" field.</summary>
    public const int AggGroupFieldNumber = 5;
    private readonly static int AggGroupDefaultValue = 0;

    private int aggGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AggGroup {
      get { if ((_hasBits0 & 1) != 0) { return aggGroup_; } else { return AggGroupDefaultValue; } }
      set {
        _hasBits0 |= 1;
        aggGroup_ = value;
      }
    }
    /// <summary>Gets whether the "aggGroup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAggGroup {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "aggGroup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAggGroup() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DepthMarketDataDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DepthMarketDataDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchange != other.Exchange) return false;
      if (SecType != other.SecType) return false;
      if (ListingExch != other.ListingExch) return false;
      if (ServiceDataType != other.ServiceDataType) return false;
      if (AggGroup != other.AggGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasSecType) hash ^= SecType.GetHashCode();
      if (HasListingExch) hash ^= ListingExch.GetHashCode();
      if (HasServiceDataType) hash ^= ServiceDataType.GetHashCode();
      if (HasAggGroup) hash ^= AggGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasExchange) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (HasSecType) {
        output.WriteRawTag(18);
        output.WriteString(SecType);
      }
      if (HasListingExch) {
        output.WriteRawTag(26);
        output.WriteString(ListingExch);
      }
      if (HasServiceDataType) {
        output.WriteRawTag(34);
        output.WriteString(ServiceDataType);
      }
      if (HasAggGroup) {
        output.WriteRawTag(40);
        output.WriteInt32(AggGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasExchange) {
        output.WriteRawTag(10);
        output.WriteString(Exchange);
      }
      if (HasSecType) {
        output.WriteRawTag(18);
        output.WriteString(SecType);
      }
      if (HasListingExch) {
        output.WriteRawTag(26);
        output.WriteString(ListingExch);
      }
      if (HasServiceDataType) {
        output.WriteRawTag(34);
        output.WriteString(ServiceDataType);
      }
      if (HasAggGroup) {
        output.WriteRawTag(40);
        output.WriteInt32(AggGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasSecType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecType);
      }
      if (HasListingExch) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListingExch);
      }
      if (HasServiceDataType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceDataType);
      }
      if (HasAggGroup) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AggGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DepthMarketDataDescription other) {
      if (other == null) {
        return;
      }
      if (other.HasExchange) {
        Exchange = other.Exchange;
      }
      if (other.HasSecType) {
        SecType = other.SecType;
      }
      if (other.HasListingExch) {
        ListingExch = other.ListingExch;
      }
      if (other.HasServiceDataType) {
        ServiceDataType = other.ServiceDataType;
      }
      if (other.HasAggGroup) {
        AggGroup = other.AggGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            SecType = input.ReadString();
            break;
          }
          case 26: {
            ListingExch = input.ReadString();
            break;
          }
          case 34: {
            ServiceDataType = input.ReadString();
            break;
          }
          case 40: {
            AggGroup = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Exchange = input.ReadString();
            break;
          }
          case 18: {
            SecType = input.ReadString();
            break;
          }
          case 26: {
            ListingExch = input.ReadString();
            break;
          }
          case 34: {
            ServiceDataType = input.ReadString();
            break;
          }
          case 40: {
            AggGroup = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
