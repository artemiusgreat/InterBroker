// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SecDefOptParamsRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from SecDefOptParamsRequest.proto</summary>
  public static partial class SecDefOptParamsRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for SecDefOptParamsRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SecDefOptParamsRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxTZWNEZWZPcHRQYXJhbXNSZXF1ZXN0LnByb3RvEghwcm90b2J1ZiKCAgoW",
            "U2VjRGVmT3B0UGFyYW1zUmVxdWVzdBISCgVyZXFJZBgBIAEoBUgAiAEBEh0K",
            "EHVuZGVybHlpbmdTeW1ib2wYAiABKAlIAYgBARIbCg5mdXRGb3BFeGNoYW5n",
            "ZRgDIAEoCUgCiAEBEh4KEXVuZGVybHlpbmdTZWNUeXBlGAQgASgJSAOIAQES",
            "HAoPdW5kZXJseWluZ0NvbklkGAUgASgFSASIAQFCCAoGX3JlcUlkQhMKEV91",
            "bmRlcmx5aW5nU3ltYm9sQhEKD19mdXRGb3BFeGNoYW5nZUIUChJfdW5kZXJs",
            "eWluZ1NlY1R5cGVCEgoQX3VuZGVybHlpbmdDb25JZEJGChZjb20uaWIuY2xp",
            "ZW50LnByb3RvYnVmQhtTZWNEZWZPcHRQYXJhbXNSZXF1ZXN0UHJvdG+qAg5J",
            "QkFwaS5wcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.SecDefOptParamsRequest), global::IBApi.protobuf.SecDefOptParamsRequest.Parser, new[]{ "ReqId", "UnderlyingSymbol", "FutFopExchange", "UnderlyingSecType", "UnderlyingConId" }, new[]{ "ReqId", "UnderlyingSymbol", "FutFopExchange", "UnderlyingSecType", "UnderlyingConId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SecDefOptParamsRequest : pb::IMessage<SecDefOptParamsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SecDefOptParamsRequest> _parser = new pb::MessageParser<SecDefOptParamsRequest>(() => new SecDefOptParamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SecDefOptParamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.SecDefOptParamsRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParamsRequest(SecDefOptParamsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      underlyingSymbol_ = other.underlyingSymbol_;
      futFopExchange_ = other.futFopExchange_;
      underlyingSecType_ = other.underlyingSecType_;
      underlyingConId_ = other.underlyingConId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParamsRequest Clone() {
      return new SecDefOptParamsRequest(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "underlyingSymbol" field.</summary>
    public const int UnderlyingSymbolFieldNumber = 2;
    private readonly static string UnderlyingSymbolDefaultValue = "";

    private string underlyingSymbol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnderlyingSymbol {
      get { return underlyingSymbol_ ?? UnderlyingSymbolDefaultValue; }
      set {
        underlyingSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "underlyingSymbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnderlyingSymbol {
      get { return underlyingSymbol_ != null; }
    }
    /// <summary>Clears the value of the "underlyingSymbol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnderlyingSymbol() {
      underlyingSymbol_ = null;
    }

    /// <summary>Field number for the "futFopExchange" field.</summary>
    public const int FutFopExchangeFieldNumber = 3;
    private readonly static string FutFopExchangeDefaultValue = "";

    private string futFopExchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FutFopExchange {
      get { return futFopExchange_ ?? FutFopExchangeDefaultValue; }
      set {
        futFopExchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "futFopExchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFutFopExchange {
      get { return futFopExchange_ != null; }
    }
    /// <summary>Clears the value of the "futFopExchange" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFutFopExchange() {
      futFopExchange_ = null;
    }

    /// <summary>Field number for the "underlyingSecType" field.</summary>
    public const int UnderlyingSecTypeFieldNumber = 4;
    private readonly static string UnderlyingSecTypeDefaultValue = "";

    private string underlyingSecType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnderlyingSecType {
      get { return underlyingSecType_ ?? UnderlyingSecTypeDefaultValue; }
      set {
        underlyingSecType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "underlyingSecType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnderlyingSecType {
      get { return underlyingSecType_ != null; }
    }
    /// <summary>Clears the value of the "underlyingSecType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnderlyingSecType() {
      underlyingSecType_ = null;
    }

    /// <summary>Field number for the "underlyingConId" field.</summary>
    public const int UnderlyingConIdFieldNumber = 5;
    private readonly static int UnderlyingConIdDefaultValue = 0;

    private int underlyingConId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnderlyingConId {
      get { if ((_hasBits0 & 2) != 0) { return underlyingConId_; } else { return UnderlyingConIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        underlyingConId_ = value;
      }
    }
    /// <summary>Gets whether the "underlyingConId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnderlyingConId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "underlyingConId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnderlyingConId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SecDefOptParamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SecDefOptParamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (UnderlyingSymbol != other.UnderlyingSymbol) return false;
      if (FutFopExchange != other.FutFopExchange) return false;
      if (UnderlyingSecType != other.UnderlyingSecType) return false;
      if (UnderlyingConId != other.UnderlyingConId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (HasUnderlyingSymbol) hash ^= UnderlyingSymbol.GetHashCode();
      if (HasFutFopExchange) hash ^= FutFopExchange.GetHashCode();
      if (HasUnderlyingSecType) hash ^= UnderlyingSecType.GetHashCode();
      if (HasUnderlyingConId) hash ^= UnderlyingConId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasUnderlyingSymbol) {
        output.WriteRawTag(18);
        output.WriteString(UnderlyingSymbol);
      }
      if (HasFutFopExchange) {
        output.WriteRawTag(26);
        output.WriteString(FutFopExchange);
      }
      if (HasUnderlyingSecType) {
        output.WriteRawTag(34);
        output.WriteString(UnderlyingSecType);
      }
      if (HasUnderlyingConId) {
        output.WriteRawTag(40);
        output.WriteInt32(UnderlyingConId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasUnderlyingSymbol) {
        output.WriteRawTag(18);
        output.WriteString(UnderlyingSymbol);
      }
      if (HasFutFopExchange) {
        output.WriteRawTag(26);
        output.WriteString(FutFopExchange);
      }
      if (HasUnderlyingSecType) {
        output.WriteRawTag(34);
        output.WriteString(UnderlyingSecType);
      }
      if (HasUnderlyingConId) {
        output.WriteRawTag(40);
        output.WriteInt32(UnderlyingConId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (HasUnderlyingSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnderlyingSymbol);
      }
      if (HasFutFopExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FutFopExchange);
      }
      if (HasUnderlyingSecType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnderlyingSecType);
      }
      if (HasUnderlyingConId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnderlyingConId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SecDefOptParamsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.HasUnderlyingSymbol) {
        UnderlyingSymbol = other.UnderlyingSymbol;
      }
      if (other.HasFutFopExchange) {
        FutFopExchange = other.FutFopExchange;
      }
      if (other.HasUnderlyingSecType) {
        UnderlyingSecType = other.UnderlyingSecType;
      }
      if (other.HasUnderlyingConId) {
        UnderlyingConId = other.UnderlyingConId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            UnderlyingSymbol = input.ReadString();
            break;
          }
          case 26: {
            FutFopExchange = input.ReadString();
            break;
          }
          case 34: {
            UnderlyingSecType = input.ReadString();
            break;
          }
          case 40: {
            UnderlyingConId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            UnderlyingSymbol = input.ReadString();
            break;
          }
          case 26: {
            FutFopExchange = input.ReadString();
            break;
          }
          case 34: {
            UnderlyingSecType = input.ReadString();
            break;
          }
          case 40: {
            UnderlyingConId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
