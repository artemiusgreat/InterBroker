// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SecDefOptParameter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from SecDefOptParameter.proto</summary>
  public static partial class SecDefOptParameterReflection {

    #region Descriptor
    /// <summary>File descriptor for SecDefOptParameter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SecDefOptParameterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTZWNEZWZPcHRQYXJhbWV0ZXIucHJvdG8SCHByb3RvYnVmIoICChJTZWNE",
            "ZWZPcHRQYXJhbWV0ZXISEgoFcmVxSWQYASABKAVIAIgBARIVCghleGNoYW5n",
            "ZRgCIAEoCUgBiAEBEhwKD3VuZGVybHlpbmdDb25JZBgDIAEoBUgCiAEBEhkK",
            "DHRyYWRpbmdDbGFzcxgEIAEoCUgDiAEBEhcKCm11bHRpcGxpZXIYBSABKAlI",
            "BIgBARITCgtleHBpcmF0aW9ucxgGIAMoCRIPCgdzdHJpa2VzGAcgAygBQggK",
            "Bl9yZXFJZEILCglfZXhjaGFuZ2VCEgoQX3VuZGVybHlpbmdDb25JZEIPCg1f",
            "dHJhZGluZ0NsYXNzQg0KC19tdWx0aXBsaWVyQkIKFmNvbS5pYi5jbGllbnQu",
            "cHJvdG9idWZCF1NlY0RlZk9wdFBhcmFtZXRlclByb3RvqgIOSUJBcGkucHJv",
            "dG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.SecDefOptParameter), global::IBApi.protobuf.SecDefOptParameter.Parser, new[]{ "ReqId", "Exchange", "UnderlyingConId", "TradingClass", "Multiplier", "Expirations", "Strikes" }, new[]{ "ReqId", "Exchange", "UnderlyingConId", "TradingClass", "Multiplier" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SecDefOptParameter : pb::IMessage<SecDefOptParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SecDefOptParameter> _parser = new pb::MessageParser<SecDefOptParameter>(() => new SecDefOptParameter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SecDefOptParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.SecDefOptParameterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParameter(SecDefOptParameter other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      exchange_ = other.exchange_;
      underlyingConId_ = other.underlyingConId_;
      tradingClass_ = other.tradingClass_;
      multiplier_ = other.multiplier_;
      expirations_ = other.expirations_.Clone();
      strikes_ = other.strikes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecDefOptParameter Clone() {
      return new SecDefOptParameter(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private readonly static string ExchangeDefaultValue = "";

    private string exchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exchange {
      get { return exchange_ ?? ExchangeDefaultValue; }
      set {
        exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchange" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchange {
      get { return exchange_ != null; }
    }
    /// <summary>Clears the value of the "exchange" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchange() {
      exchange_ = null;
    }

    /// <summary>Field number for the "underlyingConId" field.</summary>
    public const int UnderlyingConIdFieldNumber = 3;
    private readonly static int UnderlyingConIdDefaultValue = 0;

    private int underlyingConId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnderlyingConId {
      get { if ((_hasBits0 & 2) != 0) { return underlyingConId_; } else { return UnderlyingConIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        underlyingConId_ = value;
      }
    }
    /// <summary>Gets whether the "underlyingConId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnderlyingConId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "underlyingConId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnderlyingConId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tradingClass" field.</summary>
    public const int TradingClassFieldNumber = 4;
    private readonly static string TradingClassDefaultValue = "";

    private string tradingClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TradingClass {
      get { return tradingClass_ ?? TradingClassDefaultValue; }
      set {
        tradingClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tradingClass" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTradingClass {
      get { return tradingClass_ != null; }
    }
    /// <summary>Clears the value of the "tradingClass" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTradingClass() {
      tradingClass_ = null;
    }

    /// <summary>Field number for the "multiplier" field.</summary>
    public const int MultiplierFieldNumber = 5;
    private readonly static string MultiplierDefaultValue = "";

    private string multiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Multiplier {
      get { return multiplier_ ?? MultiplierDefaultValue; }
      set {
        multiplier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multiplier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiplier {
      get { return multiplier_ != null; }
    }
    /// <summary>Clears the value of the "multiplier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiplier() {
      multiplier_ = null;
    }

    /// <summary>Field number for the "expirations" field.</summary>
    public const int ExpirationsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_expirations_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> expirations_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Expirations {
      get { return expirations_; }
    }

    /// <summary>Field number for the "strikes" field.</summary>
    public const int StrikesFieldNumber = 7;
    private static readonly pb::FieldCodec<double> _repeated_strikes_codec
        = pb::FieldCodec.ForDouble(58);
    private readonly pbc::RepeatedField<double> strikes_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Strikes {
      get { return strikes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SecDefOptParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SecDefOptParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (Exchange != other.Exchange) return false;
      if (UnderlyingConId != other.UnderlyingConId) return false;
      if (TradingClass != other.TradingClass) return false;
      if (Multiplier != other.Multiplier) return false;
      if(!expirations_.Equals(other.expirations_)) return false;
      if(!strikes_.Equals(other.strikes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (HasExchange) hash ^= Exchange.GetHashCode();
      if (HasUnderlyingConId) hash ^= UnderlyingConId.GetHashCode();
      if (HasTradingClass) hash ^= TradingClass.GetHashCode();
      if (HasMultiplier) hash ^= Multiplier.GetHashCode();
      hash ^= expirations_.GetHashCode();
      hash ^= strikes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasExchange) {
        output.WriteRawTag(18);
        output.WriteString(Exchange);
      }
      if (HasUnderlyingConId) {
        output.WriteRawTag(24);
        output.WriteInt32(UnderlyingConId);
      }
      if (HasTradingClass) {
        output.WriteRawTag(34);
        output.WriteString(TradingClass);
      }
      if (HasMultiplier) {
        output.WriteRawTag(42);
        output.WriteString(Multiplier);
      }
      expirations_.WriteTo(output, _repeated_expirations_codec);
      strikes_.WriteTo(output, _repeated_strikes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (HasExchange) {
        output.WriteRawTag(18);
        output.WriteString(Exchange);
      }
      if (HasUnderlyingConId) {
        output.WriteRawTag(24);
        output.WriteInt32(UnderlyingConId);
      }
      if (HasTradingClass) {
        output.WriteRawTag(34);
        output.WriteString(TradingClass);
      }
      if (HasMultiplier) {
        output.WriteRawTag(42);
        output.WriteString(Multiplier);
      }
      expirations_.WriteTo(ref output, _repeated_expirations_codec);
      strikes_.WriteTo(ref output, _repeated_strikes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (HasExchange) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
      }
      if (HasUnderlyingConId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnderlyingConId);
      }
      if (HasTradingClass) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradingClass);
      }
      if (HasMultiplier) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Multiplier);
      }
      size += expirations_.CalculateSize(_repeated_expirations_codec);
      size += strikes_.CalculateSize(_repeated_strikes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SecDefOptParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.HasExchange) {
        Exchange = other.Exchange;
      }
      if (other.HasUnderlyingConId) {
        UnderlyingConId = other.UnderlyingConId;
      }
      if (other.HasTradingClass) {
        TradingClass = other.TradingClass;
      }
      if (other.HasMultiplier) {
        Multiplier = other.Multiplier;
      }
      expirations_.Add(other.expirations_);
      strikes_.Add(other.strikes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            Exchange = input.ReadString();
            break;
          }
          case 24: {
            UnderlyingConId = input.ReadInt32();
            break;
          }
          case 34: {
            TradingClass = input.ReadString();
            break;
          }
          case 42: {
            Multiplier = input.ReadString();
            break;
          }
          case 50: {
            expirations_.AddEntriesFrom(input, _repeated_expirations_codec);
            break;
          }
          case 58:
          case 57: {
            strikes_.AddEntriesFrom(input, _repeated_strikes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            Exchange = input.ReadString();
            break;
          }
          case 24: {
            UnderlyingConId = input.ReadInt32();
            break;
          }
          case 34: {
            TradingClass = input.ReadString();
            break;
          }
          case 42: {
            Multiplier = input.ReadString();
            break;
          }
          case 50: {
            expirations_.AddEntriesFrom(ref input, _repeated_expirations_codec);
            break;
          }
          case 58:
          case 57: {
            strikes_.AddEntriesFrom(ref input, _repeated_strikes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
