// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HeadTimestampRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from HeadTimestampRequest.proto</summary>
  public static partial class HeadTimestampRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for HeadTimestampRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeadTimestampRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpIZWFkVGltZXN0YW1wUmVxdWVzdC5wcm90bxIIcHJvdG9idWYaDkNvbnRy",
            "YWN0LnByb3RvItwBChRIZWFkVGltZXN0YW1wUmVxdWVzdBISCgVyZXFJZBgB",
            "IAEoBUgAiAEBEikKCGNvbnRyYWN0GAIgASgLMhIucHJvdG9idWYuQ29udHJh",
            "Y3RIAYgBARITCgZ1c2VSVEgYAyABKAhIAogBARIXCgp3aGF0VG9TaG93GAQg",
            "ASgJSAOIAQESFwoKZm9ybWF0RGF0ZRgFIAEoBUgEiAEBQggKBl9yZXFJZEIL",
            "CglfY29udHJhY3RCCQoHX3VzZVJUSEINCgtfd2hhdFRvU2hvd0INCgtfZm9y",
            "bWF0RGF0ZUJEChZjb20uaWIuY2xpZW50LnByb3RvYnVmQhlIZWFkVGltZXN0",
            "YW1wUmVxdWVzdFByb3RvqgIOSUJBcGkucHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.ContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.HeadTimestampRequest), global::IBApi.protobuf.HeadTimestampRequest.Parser, new[]{ "ReqId", "Contract", "UseRTH", "WhatToShow", "FormatDate" }, new[]{ "ReqId", "Contract", "UseRTH", "WhatToShow", "FormatDate" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HeadTimestampRequest : pb::IMessage<HeadTimestampRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeadTimestampRequest> _parser = new pb::MessageParser<HeadTimestampRequest>(() => new HeadTimestampRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HeadTimestampRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.HeadTimestampRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeadTimestampRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeadTimestampRequest(HeadTimestampRequest other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      useRTH_ = other.useRTH_;
      whatToShow_ = other.whatToShow_;
      formatDate_ = other.formatDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeadTimestampRequest Clone() {
      return new HeadTimestampRequest(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 2;
    private global::IBApi.protobuf.ProtoContract contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IBApi.protobuf.ProtoContract Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "useRTH" field.</summary>
    public const int UseRTHFieldNumber = 3;
    private readonly static bool UseRTHDefaultValue = false;

    private bool useRTH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseRTH {
      get { if ((_hasBits0 & 2) != 0) { return useRTH_; } else { return UseRTHDefaultValue; } }
      set {
        _hasBits0 |= 2;
        useRTH_ = value;
      }
    }
    /// <summary>Gets whether the "useRTH" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseRTH {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "useRTH" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseRTH() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "whatToShow" field.</summary>
    public const int WhatToShowFieldNumber = 4;
    private readonly static string WhatToShowDefaultValue = "";

    private string whatToShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WhatToShow {
      get { return whatToShow_ ?? WhatToShowDefaultValue; }
      set {
        whatToShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "whatToShow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWhatToShow {
      get { return whatToShow_ != null; }
    }
    /// <summary>Clears the value of the "whatToShow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWhatToShow() {
      whatToShow_ = null;
    }

    /// <summary>Field number for the "formatDate" field.</summary>
    public const int FormatDateFieldNumber = 5;
    private readonly static int FormatDateDefaultValue = 0;

    private int formatDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FormatDate {
      get { if ((_hasBits0 & 4) != 0) { return formatDate_; } else { return FormatDateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        formatDate_ = value;
      }
    }
    /// <summary>Gets whether the "formatDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormatDate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "formatDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormatDate() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HeadTimestampRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HeadTimestampRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (!object.Equals(Contract, other.Contract)) return false;
      if (UseRTH != other.UseRTH) return false;
      if (WhatToShow != other.WhatToShow) return false;
      if (FormatDate != other.FormatDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (HasUseRTH) hash ^= UseRTH.GetHashCode();
      if (HasWhatToShow) hash ^= WhatToShow.GetHashCode();
      if (HasFormatDate) hash ^= FormatDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasUseRTH) {
        output.WriteRawTag(24);
        output.WriteBool(UseRTH);
      }
      if (HasWhatToShow) {
        output.WriteRawTag(34);
        output.WriteString(WhatToShow);
      }
      if (HasFormatDate) {
        output.WriteRawTag(40);
        output.WriteInt32(FormatDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasUseRTH) {
        output.WriteRawTag(24);
        output.WriteBool(UseRTH);
      }
      if (HasWhatToShow) {
        output.WriteRawTag(34);
        output.WriteString(WhatToShow);
      }
      if (HasFormatDate) {
        output.WriteRawTag(40);
        output.WriteInt32(FormatDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (HasUseRTH) {
        size += 1 + 1;
      }
      if (HasWhatToShow) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WhatToShow);
      }
      if (HasFormatDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormatDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HeadTimestampRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          Contract = new global::IBApi.protobuf.ProtoContract();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.HasUseRTH) {
        UseRTH = other.UseRTH;
      }
      if (other.HasWhatToShow) {
        WhatToShow = other.WhatToShow;
      }
      if (other.HasFormatDate) {
        FormatDate = other.FormatDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.Contract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 24: {
            UseRTH = input.ReadBool();
            break;
          }
          case 34: {
            WhatToShow = input.ReadString();
            break;
          }
          case 40: {
            FormatDate = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.ProtoContract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 24: {
            UseRTH = input.ReadBool();
            break;
          }
          case 34: {
            WhatToShow = input.ReadString();
            break;
          }
          case 40: {
            FormatDate = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
