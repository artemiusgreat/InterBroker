// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MarketRule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from MarketRule.proto</summary>
  public static partial class MarketRuleReflection {

    #region Descriptor
    /// <summary>File descriptor for MarketRule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketRuleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBNYXJrZXRSdWxlLnByb3RvEghwcm90b2J1ZhoUUHJpY2VJbmNyZW1lbnQu",
            "cHJvdG8iawoKTWFya2V0UnVsZRIZCgxtYXJrZXRSdWxlSWQYASABKAVIAIgB",
            "ARIxCg9wcmljZUluY3JlbWVudHMYAiADKAsyGC5wcm90b2J1Zi5QcmljZUlu",
            "Y3JlbWVudEIPCg1fbWFya2V0UnVsZUlkQjoKFmNvbS5pYi5jbGllbnQucHJv",
            "dG9idWZCD01hcmtldFJ1bGVQcm90b6oCDklCQXBpLnByb3RvYnVmYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.PriceIncrementReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.MarketRule), global::IBApi.protobuf.MarketRule.Parser, new[]{ "MarketRuleId", "PriceIncrements" }, new[]{ "MarketRuleId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MarketRule : pb::IMessage<MarketRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketRule> _parser = new pb::MessageParser<MarketRule>(() => new MarketRule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.MarketRuleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketRule(MarketRule other) : this() {
      _hasBits0 = other._hasBits0;
      marketRuleId_ = other.marketRuleId_;
      priceIncrements_ = other.priceIncrements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketRule Clone() {
      return new MarketRule(this);
    }

    /// <summary>Field number for the "marketRuleId" field.</summary>
    public const int MarketRuleIdFieldNumber = 1;
    private readonly static int MarketRuleIdDefaultValue = 0;

    private int marketRuleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MarketRuleId {
      get { if ((_hasBits0 & 1) != 0) { return marketRuleId_; } else { return MarketRuleIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        marketRuleId_ = value;
      }
    }
    /// <summary>Gets whether the "marketRuleId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketRuleId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "marketRuleId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketRuleId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "priceIncrements" field.</summary>
    public const int PriceIncrementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::IBApi.protobuf.PriceIncrement> _repeated_priceIncrements_codec
        = pb::FieldCodec.ForMessage(18, global::IBApi.protobuf.PriceIncrement.Parser);
    private readonly pbc::RepeatedField<global::IBApi.protobuf.PriceIncrement> priceIncrements_ = new pbc::RepeatedField<global::IBApi.protobuf.PriceIncrement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::IBApi.protobuf.PriceIncrement> PriceIncrements {
      get { return priceIncrements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketRuleId != other.MarketRuleId) return false;
      if(!priceIncrements_.Equals(other.priceIncrements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMarketRuleId) hash ^= MarketRuleId.GetHashCode();
      hash ^= priceIncrements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMarketRuleId) {
        output.WriteRawTag(8);
        output.WriteInt32(MarketRuleId);
      }
      priceIncrements_.WriteTo(output, _repeated_priceIncrements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMarketRuleId) {
        output.WriteRawTag(8);
        output.WriteInt32(MarketRuleId);
      }
      priceIncrements_.WriteTo(ref output, _repeated_priceIncrements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMarketRuleId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketRuleId);
      }
      size += priceIncrements_.CalculateSize(_repeated_priceIncrements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketRule other) {
      if (other == null) {
        return;
      }
      if (other.HasMarketRuleId) {
        MarketRuleId = other.MarketRuleId;
      }
      priceIncrements_.Add(other.priceIncrements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MarketRuleId = input.ReadInt32();
            break;
          }
          case 18: {
            priceIncrements_.AddEntriesFrom(input, _repeated_priceIncrements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MarketRuleId = input.ReadInt32();
            break;
          }
          case 18: {
            priceIncrements_.AddEntriesFrom(ref input, _repeated_priceIncrements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
