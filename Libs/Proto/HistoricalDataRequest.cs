// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HistoricalDataRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IBApi.protobuf {

  /// <summary>Holder for reflection information generated from HistoricalDataRequest.proto</summary>
  public static partial class HistoricalDataRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for HistoricalDataRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HistoricalDataRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtIaXN0b3JpY2FsRGF0YVJlcXVlc3QucHJvdG8SCHByb3RvYnVmGg5Db250",
            "cmFjdC5wcm90byKFBAoVSGlzdG9yaWNhbERhdGFSZXF1ZXN0EhIKBXJlcUlk",
            "GAEgASgFSACIAQESKQoIY29udHJhY3QYAiABKAsyEi5wcm90b2J1Zi5Db250",
            "cmFjdEgBiAEBEhgKC2VuZERhdGVUaW1lGAMgASgJSAKIAQESGwoOYmFyU2l6",
            "ZVNldHRpbmcYBCABKAlIA4gBARIVCghkdXJhdGlvbhgFIAEoCUgEiAEBEhMK",
            "BnVzZVJUSBgGIAEoCEgFiAEBEhcKCndoYXRUb1Nob3cYByABKAlIBogBARIX",
            "Cgpmb3JtYXREYXRlGAggASgFSAeIAQESGQoMa2VlcFVwVG9EYXRlGAkgASgI",
            "SAiIAQESRwoMY2hhcnRPcHRpb25zGAogAygLMjEucHJvdG9idWYuSGlzdG9y",
            "aWNhbERhdGFSZXF1ZXN0LkNoYXJ0T3B0aW9uc0VudHJ5GjMKEUNoYXJ0T3B0",
            "aW9uc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFCCAoG",
            "X3JlcUlkQgsKCV9jb250cmFjdEIOCgxfZW5kRGF0ZVRpbWVCEQoPX2JhclNp",
            "emVTZXR0aW5nQgsKCV9kdXJhdGlvbkIJCgdfdXNlUlRIQg0KC193aGF0VG9T",
            "aG93Qg0KC19mb3JtYXREYXRlQg8KDV9rZWVwVXBUb0RhdGVCRQoWY29tLmli",
            "LmNsaWVudC5wcm90b2J1ZkIaSGlzdG9yaWNhbERhdGFSZXF1ZXN0UHJvdG+q",
            "Ag5JQkFwaS5wcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IBApi.protobuf.ContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IBApi.protobuf.HistoricalDataRequest), global::IBApi.protobuf.HistoricalDataRequest.Parser, new[]{ "ReqId", "Contract", "EndDateTime", "BarSizeSetting", "Duration", "UseRTH", "WhatToShow", "FormatDate", "KeepUpToDate", "ChartOptions" }, new[]{ "ReqId", "Contract", "EndDateTime", "BarSizeSetting", "Duration", "UseRTH", "WhatToShow", "FormatDate", "KeepUpToDate" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HistoricalDataRequest : pb::IMessage<HistoricalDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoricalDataRequest> _parser = new pb::MessageParser<HistoricalDataRequest>(() => new HistoricalDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HistoricalDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IBApi.protobuf.HistoricalDataRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalDataRequest(HistoricalDataRequest other) : this() {
      _hasBits0 = other._hasBits0;
      reqId_ = other.reqId_;
      contract_ = other.contract_ != null ? other.contract_.Clone() : null;
      endDateTime_ = other.endDateTime_;
      barSizeSetting_ = other.barSizeSetting_;
      duration_ = other.duration_;
      useRTH_ = other.useRTH_;
      whatToShow_ = other.whatToShow_;
      formatDate_ = other.formatDate_;
      keepUpToDate_ = other.keepUpToDate_;
      chartOptions_ = other.chartOptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricalDataRequest Clone() {
      return new HistoricalDataRequest(this);
    }

    /// <summary>Field number for the "reqId" field.</summary>
    public const int ReqIdFieldNumber = 1;
    private readonly static int ReqIdDefaultValue = 0;

    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqId {
      get { if ((_hasBits0 & 1) != 0) { return reqId_; } else { return ReqIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqId_ = value;
      }
    }
    /// <summary>Gets whether the "reqId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reqId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 2;
    private global::IBApi.protobuf.ProtoContract contract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IBApi.protobuf.ProtoContract Contract {
      get { return contract_; }
      set {
        contract_ = value;
      }
    }

    /// <summary>Field number for the "endDateTime" field.</summary>
    public const int EndDateTimeFieldNumber = 3;
    private readonly static string EndDateTimeDefaultValue = "";

    private string endDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndDateTime {
      get { return endDateTime_ ?? EndDateTimeDefaultValue; }
      set {
        endDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "endDateTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndDateTime {
      get { return endDateTime_ != null; }
    }
    /// <summary>Clears the value of the "endDateTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndDateTime() {
      endDateTime_ = null;
    }

    /// <summary>Field number for the "barSizeSetting" field.</summary>
    public const int BarSizeSettingFieldNumber = 4;
    private readonly static string BarSizeSettingDefaultValue = "";

    private string barSizeSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BarSizeSetting {
      get { return barSizeSetting_ ?? BarSizeSettingDefaultValue; }
      set {
        barSizeSetting_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "barSizeSetting" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBarSizeSetting {
      get { return barSizeSetting_ != null; }
    }
    /// <summary>Clears the value of the "barSizeSetting" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBarSizeSetting() {
      barSizeSetting_ = null;
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private readonly static string DurationDefaultValue = "";

    private string duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Duration {
      get { return duration_ ?? DurationDefaultValue; }
      set {
        duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDuration {
      get { return duration_ != null; }
    }
    /// <summary>Clears the value of the "duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDuration() {
      duration_ = null;
    }

    /// <summary>Field number for the "useRTH" field.</summary>
    public const int UseRTHFieldNumber = 6;
    private readonly static bool UseRTHDefaultValue = false;

    private bool useRTH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseRTH {
      get { if ((_hasBits0 & 2) != 0) { return useRTH_; } else { return UseRTHDefaultValue; } }
      set {
        _hasBits0 |= 2;
        useRTH_ = value;
      }
    }
    /// <summary>Gets whether the "useRTH" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseRTH {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "useRTH" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseRTH() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "whatToShow" field.</summary>
    public const int WhatToShowFieldNumber = 7;
    private readonly static string WhatToShowDefaultValue = "";

    private string whatToShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WhatToShow {
      get { return whatToShow_ ?? WhatToShowDefaultValue; }
      set {
        whatToShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "whatToShow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWhatToShow {
      get { return whatToShow_ != null; }
    }
    /// <summary>Clears the value of the "whatToShow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWhatToShow() {
      whatToShow_ = null;
    }

    /// <summary>Field number for the "formatDate" field.</summary>
    public const int FormatDateFieldNumber = 8;
    private readonly static int FormatDateDefaultValue = 0;

    private int formatDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FormatDate {
      get { if ((_hasBits0 & 4) != 0) { return formatDate_; } else { return FormatDateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        formatDate_ = value;
      }
    }
    /// <summary>Gets whether the "formatDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormatDate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "formatDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormatDate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "keepUpToDate" field.</summary>
    public const int KeepUpToDateFieldNumber = 9;
    private readonly static bool KeepUpToDateDefaultValue = false;

    private bool keepUpToDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool KeepUpToDate {
      get { if ((_hasBits0 & 8) != 0) { return keepUpToDate_; } else { return KeepUpToDateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        keepUpToDate_ = value;
      }
    }
    /// <summary>Gets whether the "keepUpToDate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeepUpToDate {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "keepUpToDate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeepUpToDate() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "chartOptions" field.</summary>
    public const int ChartOptionsFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_chartOptions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> chartOptions_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> ChartOptions {
      get { return chartOptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HistoricalDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HistoricalDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqId != other.ReqId) return false;
      if (!object.Equals(Contract, other.Contract)) return false;
      if (EndDateTime != other.EndDateTime) return false;
      if (BarSizeSetting != other.BarSizeSetting) return false;
      if (Duration != other.Duration) return false;
      if (UseRTH != other.UseRTH) return false;
      if (WhatToShow != other.WhatToShow) return false;
      if (FormatDate != other.FormatDate) return false;
      if (KeepUpToDate != other.KeepUpToDate) return false;
      if (!ChartOptions.Equals(other.ChartOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (contract_ != null) hash ^= Contract.GetHashCode();
      if (HasEndDateTime) hash ^= EndDateTime.GetHashCode();
      if (HasBarSizeSetting) hash ^= BarSizeSetting.GetHashCode();
      if (HasDuration) hash ^= Duration.GetHashCode();
      if (HasUseRTH) hash ^= UseRTH.GetHashCode();
      if (HasWhatToShow) hash ^= WhatToShow.GetHashCode();
      if (HasFormatDate) hash ^= FormatDate.GetHashCode();
      if (HasKeepUpToDate) hash ^= KeepUpToDate.GetHashCode();
      hash ^= ChartOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasEndDateTime) {
        output.WriteRawTag(26);
        output.WriteString(EndDateTime);
      }
      if (HasBarSizeSetting) {
        output.WriteRawTag(34);
        output.WriteString(BarSizeSetting);
      }
      if (HasDuration) {
        output.WriteRawTag(42);
        output.WriteString(Duration);
      }
      if (HasUseRTH) {
        output.WriteRawTag(48);
        output.WriteBool(UseRTH);
      }
      if (HasWhatToShow) {
        output.WriteRawTag(58);
        output.WriteString(WhatToShow);
      }
      if (HasFormatDate) {
        output.WriteRawTag(64);
        output.WriteInt32(FormatDate);
      }
      if (HasKeepUpToDate) {
        output.WriteRawTag(72);
        output.WriteBool(KeepUpToDate);
      }
      chartOptions_.WriteTo(output, _map_chartOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqId) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqId);
      }
      if (contract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contract);
      }
      if (HasEndDateTime) {
        output.WriteRawTag(26);
        output.WriteString(EndDateTime);
      }
      if (HasBarSizeSetting) {
        output.WriteRawTag(34);
        output.WriteString(BarSizeSetting);
      }
      if (HasDuration) {
        output.WriteRawTag(42);
        output.WriteString(Duration);
      }
      if (HasUseRTH) {
        output.WriteRawTag(48);
        output.WriteBool(UseRTH);
      }
      if (HasWhatToShow) {
        output.WriteRawTag(58);
        output.WriteString(WhatToShow);
      }
      if (HasFormatDate) {
        output.WriteRawTag(64);
        output.WriteInt32(FormatDate);
      }
      if (HasKeepUpToDate) {
        output.WriteRawTag(72);
        output.WriteBool(KeepUpToDate);
      }
      chartOptions_.WriteTo(ref output, _map_chartOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (contract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contract);
      }
      if (HasEndDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDateTime);
      }
      if (HasBarSizeSetting) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BarSizeSetting);
      }
      if (HasDuration) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
      }
      if (HasUseRTH) {
        size += 1 + 1;
      }
      if (HasWhatToShow) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WhatToShow);
      }
      if (HasFormatDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormatDate);
      }
      if (HasKeepUpToDate) {
        size += 1 + 1;
      }
      size += chartOptions_.CalculateSize(_map_chartOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HistoricalDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      if (other.contract_ != null) {
        if (contract_ == null) {
          Contract = new global::IBApi.protobuf.ProtoContract();
        }
        Contract.MergeFrom(other.Contract);
      }
      if (other.HasEndDateTime) {
        EndDateTime = other.EndDateTime;
      }
      if (other.HasBarSizeSetting) {
        BarSizeSetting = other.BarSizeSetting;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasUseRTH) {
        UseRTH = other.UseRTH;
      }
      if (other.HasWhatToShow) {
        WhatToShow = other.WhatToShow;
      }
      if (other.HasFormatDate) {
        FormatDate = other.FormatDate;
      }
      if (other.HasKeepUpToDate) {
        KeepUpToDate = other.KeepUpToDate;
      }
      chartOptions_.MergeFrom(other.chartOptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.Contract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 26: {
            EndDateTime = input.ReadString();
            break;
          }
          case 34: {
            BarSizeSetting = input.ReadString();
            break;
          }
          case 42: {
            Duration = input.ReadString();
            break;
          }
          case 48: {
            UseRTH = input.ReadBool();
            break;
          }
          case 58: {
            WhatToShow = input.ReadString();
            break;
          }
          case 64: {
            FormatDate = input.ReadInt32();
            break;
          }
          case 72: {
            KeepUpToDate = input.ReadBool();
            break;
          }
          case 82: {
            chartOptions_.AddEntriesFrom(input, _map_chartOptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqId = input.ReadInt32();
            break;
          }
          case 18: {
            if (contract_ == null) {
              Contract = new global::IBApi.protobuf.ProtoContract();
            }
            input.ReadMessage(Contract);
            break;
          }
          case 26: {
            EndDateTime = input.ReadString();
            break;
          }
          case 34: {
            BarSizeSetting = input.ReadString();
            break;
          }
          case 42: {
            Duration = input.ReadString();
            break;
          }
          case 48: {
            UseRTH = input.ReadBool();
            break;
          }
          case 58: {
            WhatToShow = input.ReadString();
            break;
          }
          case 64: {
            FormatDate = input.ReadInt32();
            break;
          }
          case 72: {
            KeepUpToDate = input.ReadBool();
            break;
          }
          case 82: {
            chartOptions_.AddEntriesFrom(ref input, _map_chartOptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
